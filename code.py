# -*- coding: utf-8 -*-
"""NetflixDataAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zy8KhTorXmFIQlly7oYq6rYzanHlaEk_
"""

import pandas as pd
from google.colab import files
uploaded = files.upload()

import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('Netflix_dataset.csv')

df.head()

df.shape

df.tail()

df.size

df.columns

df.dtypes

df.info()

"""###Check Duplicate Records"""

df.shape

df.duplicated()

df[df.duplicated()]

df.drop_duplicates(inplace=True)

df[df.duplicated()]

df.shape

"""###Use heatmap to show null values if present"""

df.isnull()

df.isnull().sum()

import seaborn as sns

sns.heatmap(df.isnull())

"""####Q1. For 'House of Cards' what is the show id and who is director of the show?"""

df.head()

df['Title']

df['Title'].isin(['House of Cards'])

df[df['Title'].isin(['House of Cards'])]

df['Title'].str.contains('House of Cards')

df[df['Title'].str.contains('House of Cards')]

"""###Q2. In which year highest number of TV shows & movies were released? Show with bar graph."""

df.dtypes

#Change datatype of Release_Date

df['Date_N']=pd.to_datetime(df['Release_Date'])

df.head()

df.dtypes

df['Date_N'].dt.year.value_counts()

df['Date_N'].dt.year.value_counts().plot(kind='bar')

"""###Q3. How many Movies & TV shows are in dataset? Show with Bar Graph."""

df.head()

df.groupby('Category').Category.count()

df['Cat']=df['Category']

df.head(2)

df['Cat']=df['Cat'].astype(int)

sns.countplot(df['Category'])

"""###Q4. Show all the Movies that were released in year 2000."""

df.head()

df['Year']=df['Date_N'].dt.year

df.head()

df[(df['Category']=='Movie')&(df['Year']==2020)]

"""###Q. 5) Show only the Titles of all TV Shows that were released in India only.



"""

df[(df['Category']=='TV Show') & (df['Country']=='India')] ['Title']

"""###Q. 6) Show Top 10 Directors, who gave the highest number of TV Shows & Movies to Netflix ?"""

df['Director'].value_counts().head(10)

"""###Q. 7) Show all the Records, where "Category is Movie and Type is Comedies" or "Country is United Kingdom".

"""

df.head(2)

df[(df['Category']=='Movie') & (df['Type'].str.contains('Comedies')) | (df['Country']=='United Kingdom')]

"""###Q. 8) In how many movies/shows, Tom Cruise was cast ?

"""

df[df['Cast'].str.contains('Tom Cruise')]

data_new=df.dropna()

data_new.shape

data_new[data_new['Cast'].str.contains('Tom Cruise')]

"""###Q. 9) What are the different Ratings defined by Netflix ?

"""

df.head(2)

df['Rating'].value_counts()

df['Rating'].nunique()

df['Rating'].unique()

"""###Q. 9.1) How many Movies got the 'TV-14' rating, in Canada ?

"""

df[(df['Category']=='Movie') & (df['Rating']=='TV-14') & (df['Country']=='Canada')]

df[(df['Category']=='Movie') & (df['Rating']=='TV-14') & (df['Country']=='Canada')].shape

"""###Q. 9.2) How many TV Shows got the 'R' rating, after year 2018 ?

"""

df[(df['Category']=='TV Show') & (df['Rating']=='R') & (df['Year']>2018)]

"""###Q. 10) What is the maximum duration of a Movie/Show on Netflix ?

"""

df['Duration'].value_counts()

df['Duration'].unique()

df.Duration.dtypes

df.head(2)

df[['Minutes','Unit']]=df['Duration'].str.split(' ', expand=True)

df.head(2)

df['Minutes']

#df['Minutes']=pd.to_int(df['Minutes'])
df['Minutes']=df['Minutes'].astype(int)

df['Minutes'].max()

df['Minutes'].min()

df['Minutes'].mean()

"""###Q. 11) Which individual country has the Highest No. of TV Shows ?

"""

data_tvshow=df[df['Category']=='TV Show']

data_tvshow.head(2)

data_tvshow['Country'].value_counts().head(1)

"""###Q. 12) How can we sort the dataset by Year ?

"""

df.sort_values(by ='Year').head(2)

df.sort_values(by ='Year', ascending=False).head(2)

"""###Q. 13) Find all the instances where: Category is 'Movie' and Type is 'Dramas' or Category is 'TV Show' & Type is 'Kids' TV'."""

df[(df['Category']=='Movie') & (df['Type']=='Dramas')]

df[(df['Category']=='TV Show') & (df['Type']=="Kids' TV")]

df[(df['Category']=='Movie') & (df['Type']=='Dramas') | (df['Category']=='TV Show') & (df['Type']=="Kids' TV")]





